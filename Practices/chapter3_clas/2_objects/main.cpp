/**
 * This program creates a simple "hash" of
 * a person's name. A hash is an integer that is
 * mathematically derived from another object.
 * In this case, a string (the first and last name)
 * is accessed character by character and the hash
 * is built up from a number generated by each character.
 * While this function does not necessarily produce
 * unique hashes (different names can hash to the
 * same value), there is a relatively low possibility
 * of a "collision" with a class of roughly 400 students.
 *
 * We will learn more about hashing later this quarter!
 */

#include <iostream>
#include <string>
#include <cmath>
#include "console.h"

using namespace std;
/* - object is the instance of the class, the basic definition for it should be format as follow:
 * class_name class_name_list;
 *
 * Point p1, p2; // create 2 objects of class Point
 * Point p[3];  // create a Point class type array with length==3
 * Point *p3;   // create a pointer of Point class type
 * Point &rp = p1;  // define a reference of Point type class toward p1(give p1 object a alias as rp)
 * ================================================================================
 * - there are two types pf access member methods in class objects:
 * 1. point_access_method eg:
 * Point p1;
 * p1.show();
 * 2. pointer_access_method eg:
 * Pointer *pt = &p1;
 * pt -> show();
 * ================================================================================
 * both methods are presented here in this file.
 */

class Point{
private:
    int x, y;
public:
    void set();

    void show();
};

int main() {
    Point p1;
    //p1.x = 1; // This will not work due to x, y are private datas
    p1.set();
    Point *rp = &p1;
    rp -> show();
    cout << "---------------------------------" << endl;
    Point pb[3];
    for(int i = 0; i < 3; i++){
        pb[i].set();
        pb[i].show();
    }
    return 0;
}

int getSum (int a, int b){
    return a + b;
}

inline void Point::show(){
    cout << "(" << x << ", " << y << ")" << endl;
}

inline void Point::set(){
    cout << "please enter the value for x and y: " << endl;
    cin >> x >> y;
}
