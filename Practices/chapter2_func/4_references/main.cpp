/**
 * This program creates a simple "hash" of
 * a person's name. A hash is an integer that is
 * mathematically derived from another object.
 * In this case, a string (the first and last name)
 * is accessed character by character and the hash
 * is built up from a number generated by each character.
 * While this function does not necessarily produce
 * unique hashes (different names can hash to the
 * same value), there is a relatively low possibility
 * of a "collision" with a class of roughly 400 students.
 *
 * We will learn more about hashing later this quarter!
 */

#include <iostream>
#include <string>
#include <cmath>
#include "console.h"

using namespace std;
/* - references is a very important concept in c++, it can be identified as an alias of a certain variable
 * and the mechanism of it should be two variables whose pointers pointing to same address of data
 * the format of references should be:
 * data_type & alias_name = known_variable
 * - to be noticed: when declaring the reference variable the initialization should be executed as well
 * - assigning the value after declaration is not allowed
 * - the reference cannot be reassigned
 * - The type of returned value of function could also be a reference value, this content will be deeped inside furture
 * the returned object should be a global object or a static object, because the return object should be a real& valid object
 */

int & maxRef(int x, int y);     // the type of returned value of function is reference

int maxab;      //to set a global variable maxab

int main() {
    int i = 36;
    int &j = i;
    cout << "the value of known variable i is " << i << endl;
    cout << "the value of reference variable j is " << j << endl;
    cout << endl;
    cout << "The address of known variable i is " << &i << endl;
    cout << "The address of reference variable j is " << &j << endl;

    //int k = 100;
    //j = &k;
    /*the operation above is not allowed because the reference variable can not be reassigned after declaration*/
    int a, b;
    cout << "please enter two values for comparison changing the input with enter" << endl;
    cin >> a >> b;
    cout << maxRef(a, b) << endl;
    return 0;
}

int &maxRef (int x, int y){
    //int maxab;    //  this operation with the global variable deleted will result in error!
    if(x > y){
        maxab = x;
    }
    else maxab = y;

    return maxab;
}
