/**
 * This program creates a simple "hash" of
 * a person's name. A hash is an integer that is
 * mathematically derived from another object.
 * In this case, a string (the first and last name)
 * is accessed character by character and the hash
 * is built up from a number generated by each character.
 * While this function does not necessarily produce
 * unique hashes (different names can hash to the
 * same value), there is a relatively low possibility
 * of a "collision" with a class of roughly 400 students.
 *
 * We will learn more about hashing later this quarter!
 */

#include <iostream>
#include "console.h"
#include <cmath>
using namespace std;
/* - inline keyword is used to declare a function, to eliminate the cost of calling the function
 * as a result to increase the speed of the codes
 * the basic format should be:
 * inline returned_value_type function_name(formal_parameters_list){
 *      code_body;
 * }
 * - when declaring the inline functions the declaration should not include the inline keyword, while
 * in the defination the keyword should be added.
 * - recursive function cannot use the inline defination
 * - inline function only can be use when the function is simple(eg: no switch or while loop etc.)
 * - inline function only can be use when the scale of function smaller than 5!!!!!!
 * - inline function only can be use when the defination prior to the usage or will be identified as normal one!!!!!!
 * - inline function can not be used with the exception interface declaration!!!!!!
 * - the essence of inline function is to convert the function calling into the function body, if the function is too
 *  much complicated or too long it will be identified as normal one as well by the system.
 */

const double PI = acos(-1);

inline double circle(double radius);

int main(){
    for(int i = 1; i <= 3; i++){
        cout << "r = " << i << " area = " << circle(i) << endl;
    }
    return 0;
}

inline double circle(double radius){
    return PI * radius * radius;
}
