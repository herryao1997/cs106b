/**
 * This program creates a simple "hash" of
 * a person's name. A hash is an integer that is
 * mathematically derived from another object.
 * In this case, a string (the first and last name)
 * is accessed character by character and the hash
 * is built up from a number generated by each character.
 * While this function does not necessarily produce
 * unique hashes (different names can hash to the
 * same value), there is a relatively low possibility
 * of a "collision" with a class of roughly 400 students.
 *
 * We will learn more about hashing later this quarter!
 */

#include <iostream>
#include <string>
#include <cmath>
#include "console.h"

using namespace std;
/* - The function setting should follow the format as:
 * return_type function_name (formal_parameters_list){
 *      (the body of functions)
 * }
 * - The general calling form of function should be:
 * function_name(real_parameters_list);
 * - Where the variables in the real_parameters_list should be saperated with the comma
 * - The real parameters could be constant,  variables and expressions
 * - The type of the real and formal parameters must be consistent!
 * - When calling the function, the interpreter should combine the real and formal parameters in order from left to right
 * - When set the default parameters, the local variables cannot be used eg.:
 * int getSum(int a=3, int b=a); // error!
 */

int getSum(int a=3, int b=4);     // the type of returned value of function is reference

int main() {
    cout << getSum(1) << endl;      // print 5(1+4) 4 is default
    cout << getSum(1, 8) << endl;       //print 9(1+8)
    cout << getSum() << endl;       //print7(3+4) default
    return 0;
}

int getSum (int a, int b){
    return a + b;
}
