/**
 * This program creates a simple "hash" of
 * a person's name. A hash is an integer that is
 * mathematically derived from another object.
 * In this case, a string (the first and last name)
 * is accessed character by character and the hash
 * is built up from a number generated by each character.
 * While this function does not necessarily produce
 * unique hashes (different names can hash to the
 * same value), there is a relatively low possibility
 * of a "collision" with a class of roughly 400 students.
 *
 * We will learn more about hashing later this quarter!
 */

#include <iostream>
#include <string>
#include <cmath>
#include "console.h"

using namespace std;
/* - Exception Handling: the faults in the program sometimes are expectable but inevitable,
 * (eg: failure in opening files, divided by 0, faliure in dynamical assignment of memories
 * etc.), which usually results from system or running environments.
 *
 * - exception handling is a method to handle the error occuring while program running
 *
 * - the basic process inside exception handling are 3 steps as follow:
 * 1. checking of the exception >> with try
 * 2. throw the exception >> with throw
 * 3. catch the exception >> with catch
 *
 * ======================================
 * throw expression;
 *
 * try{
 *      function_body_checked;
 * }
 *
 * catch(type1 parameter_1){
 *      sentences_handling_the_exception_1;
 * }
 *
 * catch(type1 parameter_2){
 *      sentences_handling_the_exception_2;
 * }
 *
 * catch(type1 parameter_3){
 *      sentences_handling_the_exception_3;
 * }
 *
 * catch(type1 parameter_4){
 *      sentences_handling_the_exception_4;
 * }
 * ======================================
 * - to be noticed, when the exception throwing one string, the exception catch type should be:
 * catch(const char *p){
 *      cout << p << endl;
 * }
 * - one more thing, the ... case should be always put at the last one
 */

// exception handling case (division of two integers)

double divide(int x, int y);

int main() {
    int a, b, c;
    cout << "Please enter 2 integers for calc:" << endl;
    cin >> a >> b;
    try {
        c = divide(a, b);
        cout << "as calculation: " << a << " / " << b << " = " << c << endl;
    }

    catch (int) {
        cout << "divided by 0" << endl;
    }

    catch (const char *e) {
        cout << e << endl;
    }

    catch (...) {
        cout << "other types" << endl;
    }

    return 0;
}

double divide(int x, int y){
    if(y == 0)
        throw 1;
    else if(y == 1)
        throw 1.05;
    else if(y == 2)
        throw "this is wrong";
    return x * 1.0 / y;
}
